# State Calculation Engine Configuration - Consolidated State Version
# This file defines rules for dynamic state calculation and response processing
# Uses the new consolidated state system with nested state groups

# State calculation rules - replaces hardcoded state computation logic
state_calculation:
  # Character status calculations
  character_status.safe:
    formula: "character_status.hp_percentage >= ${thresholds.safe_hp_percentage}"
    
  character_status.needs_rest:
    formula: "character_status.hp_percentage < ${thresholds.rest_hp_percentage}"
    
  action_capabilities.can_attack:
    formula: "character_status.hp_percentage >= ${thresholds.attack_hp_percentage} and not character_status.cooldown_active"
    
  action_capabilities.can_move:
    formula: "character_status.hp > 0 and not character_status.cooldown_active"
    
  # Character progression states  
  action_capabilities.need_combat:
    formula: "character_status.level < ${thresholds.combat_level_threshold}"
    
  character_status.needs_xp:
    formula: "character_status.xp_percentage < 100"
    
  character_status.close_to_levelup:
    formula: "character_status.xp_percentage >= ${thresholds.levelup_xp_percentage}"
    
  # Resource and equipment states
  resource_context.need_resources:
    formula: "character_status.level < ${thresholds.resource_level_threshold}"
    
  equipment_status.need_equipment:
    formula: "character_status.level < ${thresholds.equipment_level_threshold}"
    
  crafting_context.need_crafting_materials:
    formula: "not crafting_context.has_materials"
    
  # DEPRECATED: These states are not used as conditions by any actions
  # location_context.need_workshop_discovery:
  #   formula: "not location_context.workshops_discovered and character_status.level >= 2"
    
  equipment_status.has_equipment:
    formula: "character_status.level >= ${thresholds.equipment_level_threshold}"
    
  # Recipe and crafting planning states  
  # DEPRECATED: Not used as a condition by any actions
  # equipment_info_unknown:
  #   formula: "need_equipment and not best_weapon_selected"  # Look up recipes only if equipment needed and no weapon selected yet
    
  recipe_known:
    formula: "best_weapon_selected"  # Recipe is known after weapon selection
    
  # Equipment readiness states
  equipment_ready:
    formula: "has_equipment and character_level >= 3"
    
  weapon_crafted:
    formula: "best_weapon_selected and has_crafting_materials"
    
  # Smelting and material processing states
  need_refined_materials:
    formula: "smelting_required == true"
    
  equipment_equipped:
    formula: "character_level >= 2"
    
  character_stats_improved:
    formula: "character_level >= 2"
    
# Computed states that require complex logic
computed_states:
  character_status.cooldown_active:
    type: "cooldown_check"
    
  character_status.alive:
    type: "formula"
    formula: "character_status.hp > 0"
    
  # Combat viability state (still actively used)
  combat_context.status:
    type: "computed"
    method: "check_combat_viability"
    
  # Equipment progression computed states
  # NOTE: Equipment analysis is now handled by AnalyzeEquipmentAction
  # These states should be set by action responses, not computed here
  equipment_status.need_weapon_upgrade:
    type: "formula"
    formula: "not equipment_status.has_better_weapon and character_status.level >= 2"
    
  equipment_status.need_armor_upgrade:
    type: "formula"
    formula: "equipment_status.has_better_armor == false and character_status.level >= 3"
    
  equipment_status.need_complete_equipment:
    type: "formula"
    formula: "equipment_status.has_complete_equipment_set == false and character_status.level >= 2"
    
  location_context.need_workshop_discovery:
    type: "formula"
    formula: "location_context.workshops_discovered == false and character_status.level >= 2"
    
  location_context.need_specific_workshop:
    type: "formula"
    formula: "crafting_context.workshop_requirements_known == true and location_context.at_correct_workshop == false"
    
  # Equipment status states
  # These states are set by action execution, not computed
  equipment_status.has_better_weapon:
    type: "formula"
    formula: "equipment_status.analysis_available and equipment_status.weapon_upgrade_available"
    
  equipment_status.has_better_armor:
    type: "formula"
    formula: "equipment_status.analysis_available == true and equipment_status.armor_upgrade_available == true"
    
  equipment_status.has_complete_equipment_set:
    type: "formula"
    formula: "equipment_status.analysis_available == true and equipment_status.set_complete == true"
    
  crafting_context.has_materials:
    type: "formula"
    formula: "inventory_context.updated == true and crafting_context.materials_sufficient == true"
    
  location_context.workshops_discovered:
    type: "formula"
    formula: "location_context.workshop_location_known == true"
    
  # Location and crafting states
  location_context.at_workshop:
    type: "formula"
    formula: "location_context.at_target == true and location_context.workshop_location_known == true"
    
  location_context.at_correct_workshop:
    type: "formula"
    formula: "location_context.at_target == true and location_context.correct_workshop_found == true"
    
  location_context.at_resource:
    type: "formula"
    formula: "location_context.at_target == true and location_context.resource_location_known == true"
    
  crafting_context.has_all_materials:
    type: "formula"
    formula: "crafting_context.materials_sufficient == true"
    
  crafting_context.materials_sufficient:
    type: "formula"
    formula: "inventory_context.updated == true and crafting_context.required_materials_available == true"
    
  # General material checks for crafting workflows
  crafting_context.has_raw_materials:
    type: "formula"
    formula: "inventory_context.updated == true and crafting_context.raw_materials_available == true"
    
  crafting_context.has_refined_materials:
    type: "formula" 
    formula: "inventory_context.updated == true and crafting_context.refined_materials_available == true"
    
  # DEPRECATED: Not used as a condition by any actions
  # crafting_context.material_requirements_known:
  #   type: "formula"
  #   formula: "equipment_status.info_known == true and crafting_context.recipe_known == true"
    
  equipment_status.best_weapon_selected:
    type: "formula"
    formula: "equipment_status.info_known == true and equipment_status.weapon_selected == true"
    
  crafting_context.craftable_weapon_identified:
    type: "formula" 
    formula: "crafting_context.recipe_known == true and crafting_context.craftable_weapon_found == true"
    
  # Skill progression states
  skills_context.need_weaponcrafting_upgrade:
    type: "formula"
    formula: "skills_context.upgrade_needed == true and skills_context.weaponcrafting_insufficient == true"
    
  skills_context.need_skill_upgrade:
    type: "formula"
    formula: "skills_context.upgrade_needed == true"
    
  skills_context.weaponcrafting_level_sufficient:
    type: "formula"
    formula: "skills_context.requirements_met == true"

# Response processing rules - replaces hardcoded update_world_state_from_response logic
response_handlers:
  move:
    location_context.at_target:
      type: "static"
      value: true
    character_status.x:
      type: "response_field"
      field: "data.character.x"
    character_status.y:
      type: "response_field"
      field: "data.character.y"
    combat_context.monster_present:
      type: "conditional"
      condition:
        type: "state_check"
        state_key: "combat_context.monsters_available"
        value: false
      true_value: false
      false_value: true  # Keep monster_present if monsters are available
      
  find_monsters:
    combat_context.monsters_available:
      type: "conditional"
      condition:
        type: "response_field"
        field: "location"
        value: null
      true_value: false
      false_value: true
    combat_context.monster_present:
      type: "conditional"
      condition:
        type: "response_field"
        field: "location"
        value: null
      true_value: false
      false_value: true
    location_context.at_target:
      type: "conditional"
      condition:
        type: "response_field"
        field: "location"
        value: null
      true_value: true
      false_value: false  # Need to move to monster location
    combat_context.status:
      type: "conditional"
      condition:
        type: "response_field"
        field: "success"
        value: false
      true_value: "not_viable"  # If find_monsters fails, combat is not viable
      false_value: "viable"  # If find_monsters succeeds, combat may be viable
      
  attack:
    combat_context.monster_present:
      type: "static"
      value: false
    goal_progress.monsters_hunted:
      type: "conditional"
      condition:
        type: "response_field"
        field: "data.fight.result"
        value: "win"
      true_value: 1
      false_value: 1  # Mark as hunted regardless of result
    combat_context.monsters_available:
      type: "conditional"
      condition:
        type: "response_field"
        field: "data.fight.result"
        value: "win"
      true_value: false
      false_value: false
    combat_context.monster_defeated:
      type: "conditional"
      condition:
        type: "response_field"
        field: "data.fight.result"
        value: "win"
      true_value: true
      false_value: false
      
  rest:
    character_status.safe:
      type: "computation"
      method: "calculate_hp_safety"
    character_status.needs_rest:
      type: "computation"
      method: "calculate_rest_need"
      
  wait:
    character_status.cooldown_active:
      type: "static"
      value: false
    action_capabilities.can_move:
      type: "static"
      value: true
    action_capabilities.can_attack:
      type: "static"
      value: true
      
  # Equipment progression response handlers
  gather_resources:
    resource_context.has_resources:
      type: "conditional"
      condition:
        type: "response_field"
        field: "data.details.items"
        value: null
      true_value: false
      false_value: true
    inventory_context.updated:
      type: "static"
      value: true
    location_context.at_resource:
      type: "static"
      value: true
      
  find_resources:
    location_context.resource_location_known:
      type: "conditional"
      condition:
        type: "response_field"
        field: "location"
        value: null
      true_value: false
      false_value: true
    location_context.at_resource:
      type: "conditional"
      condition:
        type: "response_field"
        field: "location"
        value: null
      true_value: true
      false_value: false
      
  craft_item:
    equipment_status.has_equipment:
      type: "conditional"
      condition:
        type: "response_field"
        field: "data.details.items"
        value: null
      true_value: false
      false_value: true
    inventory_context.updated:
      type: "static"
      value: true
    location_context.at_workshop:
      type: "static"
      value: true
      
  equip_item:
    equipment_status.equipped:
      type: "static"
      value: true
    character_status.stats_improved:
      type: "computation"
      method: "calculate_stat_improvement"
    inventory_context.updated:
      type: "static"
      value: true
      
  unequip_item:
    equipment_status.equipped:
      type: "static"
      value: false
    inventory_context.updated:
      type: "static"
      value: true
      
  analyze_resources:
    equipment_status.analysis_available:
      type: "static"
      value: true
    crafting_context.opportunities_known:
      type: "static"
      value: true
      
  lookup_item_info:
    equipment_status.info_known:
      type: "static"
      value: true
    crafting_context.plan_available:
      type: "static"
      value: true
    crafting_context.recipe_known:
      type: "static"
      value: true
      
  smelt_materials:
    crafting_context.has_refined_materials:
      type: "conditional"
      condition:
        type: "response_field"
        field: "success"
      true_value: true
      false_value: false
    inventory_context.updated:
      type: "static"
      value: true
    equipment_status.info_unknown:
      type: "static"
      value: false
      
  find_correct_workshop:
    location_context.at_correct_workshop:
      type: "conditional"
      condition:
        type: "response_field"
        field: "location"
        value: null
      true_value: false
      false_value: true
    location_context.workshops_discovered:
      type: "static"
      value: true
    location_context.workshop_location_known:
      type: "static"
      value: true
    location_context.need_specific_workshop:
      type: "static"
      value: false
      
  transform_material:
    crafting_context.has_refined_materials:
      type: "conditional"
      condition:
        type: "response_field"
        field: "success"
      true_value: true
      false_value: false
    inventory_context.updated:
      type: "static"
      value: true
      
  find_workshops:
    location_context.workshops_discovered:
      type: "conditional"
      condition:
        type: "response_field"
        field: "location"
        value: null
      true_value: false
      false_value: true
    location_context.workshop_location_known:
      type: "conditional"
      condition:
        type: "response_field"
        field: "location"
        value: null
      true_value: false
      false_value: true
    at_workshop:
      type: "static"
      value: false
      
  evaluate_weapon_recipes:
    equipment_status.info_known:
      type: "static"
      value: true
    crafting_context.recipe_known:
      type: "static"
      value: true
    equipment_status.best_weapon_selected:
      type: "conditional"
      condition:
        type: "response_field"
        field: "selected_weapon"
        value: null
      true_value: false
      false_value: true
    crafting_context.craftable_weapon_identified:
      type: "conditional"
      condition:
        type: "response_field"
        field: "selected_weapon"
        value: null
      true_value: false
      false_value: true

# World state update patterns
world_state_updates:
  # Common update patterns that can be reused
  movement_update:
    location_context.at_target: true
    
  combat_victory:
    combat_context.monster_present: false
    combat_context.monster_defeated: true
    goal_progress.monsters_hunted: 1
    
  combat_defeat:
    combat_context.monster_present: false
    goal_progress.monsters_hunted: 1
    
  rest_recovery:
    character_status.safe: true
    character_status.needs_rest: false