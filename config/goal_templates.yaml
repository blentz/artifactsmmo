# GOAP Goal Templates Configuration - Refactored Version
# Uses simple, declarative target states with basic comparable types only
# Complex logic moved to 4-step execution flow and GOAP planning

goal_templates:
  # Core character progression goals
  level_up:
    description: "Advance character to next level through combat and experience gain"
    objective_type: "progression"
    parameters:
      target_level: null  # Set at runtime by mission executor
    target_state:
      character_status:
        alive: true
        safe: true
      goal_progress:
        has_gained_xp: true
    strategy:
      max_iterations: 20
      hunt_radius: 4
      safety_priority: true
      rest_threshold: 30
      attack_threshold: 15
        
  hunt_monsters:
    description: "Hunt monsters for experience and loot"
    objective_type: "combat"
    target_state:
      goal_progress:
        has_gained_xp: true
    strategy:
      search_radius: 4
      max_search_attempts: 5
      level_range: 2
      prioritize_known_monsters: true
      
  upgrade_weapon:
    description: "Craft and equip a better weapon for improved combat effectiveness"
    objective_type: "equipment_progression"
    target_state:
      equipment_status:
        upgrade_status: "completed"
    strategy:
      equipment_type: "weapon"
      level_improvement_threshold: 1
      search_radius: 4
      max_craft_attempts: 5
      
  get_to_safety:
    description: "Rest to restore HP when in danger"
    objective_type: "maintenance"
    target_state:
      healing_context:
        healing_status: "complete"
      character_status:
        safe: true
    strategy:
      max_iterations: 5
      
  wait_for_cooldown:
    description: "Wait for character cooldown to expire"
    objective_type: "maintenance"
    target_state:
      character_status:
        cooldown_active: false
    strategy:
      max_wait_time: 65
      
  revive_character:
    description: "Revive character if dead"
    objective_type: "emergency"
    target_state:
      character_status:
        alive: true
      healing_context:
        healing_status: "complete"
    strategy:
      max_attempts: 3
      
# Goal selection rules - uses simple boolean conditions
goal_selection_rules:
  # Emergency priorities (highest priority)
  emergency:
    - condition:
        character_status:
          alive: false
      goal: "revive_character"
      priority: 100
      
    - condition:
        character_status:
          hp_critically_low: true
          alive: true
      goal: "get_to_safety"
      priority: 99
      
  # Maintenance priorities
  maintenance:
    - condition:
        character_status:
          cooldown_active: true
      goal: "wait_for_cooldown"
      priority: 80
      
  # Progression priorities
  progression:
    - condition:
        equipment_status:
          upgrade_status: "needs_analysis"
        character_status:
          safe: true
      goal: "upgrade_weapon"
      priority: 70
      
    - condition:
        character_status:
          safe: true
          hp_sufficient_for_combat: true
        combat_context:
          status: "idle"
      goal: "hunt_monsters"
      priority: 60

# State mapping - defines how complex states map to simple boolean flags
# This replaces the complex formulas and operators
state_mappings:
  # Character status mappings
  character_status:
    hp_critically_low: 
      source: "character_status.hp_percentage"
      condition: "< 30"
    hp_sufficient_for_combat:
      source: "character_status.hp_percentage" 
      condition: ">= 80"
    is_low_level:
      source: "character_status.level"
      condition: "<= 5"
    level_sufficient:
      source: "character_status.level"
      condition: ">= {target_level}"
    safe:
      source: "character_status.hp_percentage"
      condition: ">= 30"
      
  # Equipment status mappings  
  equipment_status:
    has_weapon:
      source: "equipment_status.weapon"
      condition: "!= null"
    has_better_weapon:
      source: "equipment_status.weapon_improved"
      condition: "== true"
    weapon_equipped:
      source: "equipment_status.equipped"
      condition: "== true"
      
  # Combat context mappings
  combat_context:
    has_recent_combat:
      source: "combat_context.recent_win_rate" 
      condition: "> 0"
    is_combat_viable:
      source: "combat_context.status"
      condition: "!= not_viable"
      
  # Goal progress mappings
  goal_progress:
    has_hunted_monsters:
      source: "goal_progress.monsters_hunted"
      condition: "> 0"
    has_gained_xp:
      source: "character_status.xp_percentage"
      condition: "> 0"

# Configuration thresholds - moved from inline expressions
thresholds:
  # Health and safety thresholds (percentages)
  safe_hp_percentage: 30
  combat_hp_percentage: 80
  max_hp_percentage: 100
  critically_low_hp: 30
  
  # Level thresholds
  low_level_threshold: 5
  
  # Combat viability thresholds
  min_combat_win_rate: 0.2
  recency_decay_factor: 0.9
  
  # Search and exploration parameters
  default_search_radius: 2
  max_search_radius: 4
  level_matching_range: 2