# Action Configuration for Metaprogramming
# This file defines how actions are instantiated and executed dynamically

# Action class registry - replaces hardcoded action_class_map
action_classes:
  # Core consolidated actions
  analyze_equipment: "src.controller.actions.analyze_equipment.AnalyzeEquipmentAction"
  select_recipe: "src.controller.actions.select_recipe.SelectRecipeAction"
  fight: "src.controller.actions.fight.FightAction"
  scan: "src.controller.actions.scan.ScanAction"
  move: "src.controller.actions.move.MoveAction"
  rest: "src.controller.actions.rest.RestAction"
  wait: "src.controller.actions.wait.WaitAction"
  gather: "src.controller.actions.gather_resources.GatherResourcesAction"
  craft: "src.controller.actions.craft_item.CraftItemAction"
  equip: "src.controller.actions.equip_item.EquipItemAction"
  unequip: "src.controller.actions.unequip_item.UnequipItemAction"
  
  # Bridge actions - Combat Flow
  initiate_combat_search: "src.controller.actions.initiate_combat_search.InitiateCombatSearchAction"
  reset_combat_context: "src.controller.actions.reset_combat_context.ResetCombatContextAction"
  abort_combat_search: "src.controller.actions.abort_combat_search.AbortCombatSearchAction"
  mark_combat_not_viable: "src.controller.actions.mark_combat_not_viable.MarkCombatNotViableAction"
  recover_combat_viability: "src.controller.actions.recover_combat_viability.RecoverCombatViabilityAction"
  
  # Bridge actions - Equipment Flow
  initiate_equipment_analysis: "src.controller.actions.initiate_equipment_analysis.InitiateEquipmentAnalysisAction"
  mark_equipment_crafting: "src.controller.actions.mark_equipment_crafting.MarkEquipmentCraftingAction"
  mark_equipment_ready: "src.controller.actions.mark_equipment_ready.MarkEquipmentReadyAction"
  complete_equipment_upgrade: "src.controller.actions.complete_equipment_upgrade.CompleteEquipmentUpgradeAction"
  reset_equipment_upgrade: "src.controller.actions.reset_equipment_upgrade.ResetEquipmentUpgradeAction"
  
  # Bridge actions - Healing Flow
  assess_healing_needs: "src.controller.actions.assess_healing_needs.AssessHealingNeedsAction"
  initiate_healing: "src.controller.actions.initiate_healing.InitiateHealingAction"
  complete_healing: "src.controller.actions.complete_healing.CompleteHealingAction"
  reset_healing_state: "src.controller.actions.reset_healing_state.ResetHealingStateAction"
  
  # Legacy actions (for backward compatibility during transition)
  attack: "src.controller.actions.attack.AttackAction"
  map_lookup: "src.controller.actions.map_lookup.MapLookupAction"
  find_monsters: "src.controller.actions.find_monsters.FindMonstersAction"
  gather_resources: "src.controller.actions.gather_resources.GatherResourcesAction"
  find_resources: "src.controller.actions.find_resources.FindResourcesAction"
  craft_item: "src.controller.actions.craft_item.CraftItemAction"
  lookup_item_info: "src.controller.actions.lookup_item_info.LookupItemInfoAction"
  equip_item: "src.controller.actions.equip_item.EquipItemAction"
  unequip_item: "src.controller.actions.unequip_item.UnequipItemAction"
  explore_map: "src.controller.actions.explore_map.ExploreMapAction"
  analyze_resources: "src.controller.actions.analyze_resources.AnalyzeResourcesAction"
  find_workshops: "src.controller.actions.find_workshops.FindWorkshopsAction"
  move_to_workshop: "src.controller.actions.move_to_workshop.MoveToWorkshopAction"
  move_to_resource: "src.controller.actions.move_to_resource.MoveToResourceAction"
  lookup_material_requirements: "src.controller.actions.lookup_item_info.LookupItemInfoAction"
  transform_material: "src.controller.actions.transform_materials_coordinator.TransformMaterialsCoordinatorAction"
  transform_raw_materials: "src.controller.actions.transform_materials_coordinator.TransformMaterialsCoordinatorAction"
  # Bridge actions for material transformation
  analyze_materials_for_transformation: "src.controller.actions.analyze_materials_for_transformation.AnalyzeMaterialsForTransformationAction"
  determine_workshop_requirements: "src.controller.actions.determine_workshop_requirements.DetermineWorkshopRequirementsAction"
  navigate_to_workshop: "src.controller.actions.navigate_to_workshop.NavigateToWorkshopAction"
  execute_material_transformation: "src.controller.actions.execute_material_transformation.ExecuteMaterialTransformationAction"
  verify_transformation_results: "src.controller.actions.verify_transformation_results.VerifyTransformationResultsAction"
  find_correct_workshop: "src.controller.actions.find_correct_workshop.FindCorrectWorkshopAction"
  evaluate_weapon_recipes: "src.controller.actions.evaluate_weapon_recipes.EvaluateWeaponRecipesAction"
  analyze_equipment_gaps: "src.controller.actions.analyze_equipment_gaps.AnalyzeEquipmentGapsAction"
  select_optimal_slot: "src.controller.actions.select_optimal_slot.SelectOptimalSlotAction"
  evaluate_recipes: "src.controller.actions.evaluate_recipes.EvaluateRecipesAction"
  upgrade_weaponcrafting_skill: "src.controller.actions.upgrade_weaponcrafting_skill.UpgradeWeaponcraftingSkillAction"
  check_skill_requirement: "src.controller.actions.check_skill_requirement.CheckSkillRequirementAction"
  find_xp_sources: "src.controller.actions.find_xp_sources.FindXpSourcesAction"

action_configurations:
  # Core consolidated actions
  analyze_equipment:
    type: "builtin"
    description: "Analyze equipment status and set upgrade targets"
    
  select_recipe:
    type: "builtin"
    description: "Select optimal recipe for equipment crafting"
    
  fight:
    type: "builtin"
    description: "Fight monsters using consolidated state format"
    
  initiate_combat_search:
    type: "yaml_defined"
    class_path: "src.controller.actions.initiate_combat_search.InitiateCombatSearchAction"
    description: "Bridge action to transition combat context from idle to searching"
    
  scan:
    type: "builtin"
    description: "Scan surrounding area for workshops and resources"
    
  gather:
    type: "builtin"
    description: "Gather resources using consolidated state format"
    
  craft:
    type: "builtin"
    description: "Craft items using consolidated state format"
    
  equip:
    type: "builtin"
    description: "Equip items using consolidated state format"
    
  unequip:
    type: "builtin"
    description: "Unequip items using consolidated state format"
  
  # Core actions
  move:
    type: "builtin"  # Uses default factory setup
    description: "Move character to a target location"
    
  attack:
    type: "builtin"
    description: "Attack a monster in combat"
    
  rest:
    type: "builtin"  
    description: "Rest to recover HP when critically low"
    
  map_lookup:
    type: "builtin"
    description: "Look up map information at coordinates"
    
  find_monsters:
    type: "builtin"
    description: "Find nearby monsters suitable for combat"
    
  wait:
    type: "builtin"
    description: "Wait for cooldown to expire"
    
  gather_resources:
    type: "builtin"
    description: "Gather resources from the environment"
    
  find_resources:
    type: "builtin"
    description: "Find resource locations on the map"
    
  craft_item:
    type: "builtin"
    description: "Craft items at workshops using materials"
    
  lookup_material_requirements:
    type: "builtin"
    description: "Look up what materials are needed for target equipment"
    
  transform_material:
    type: "builtin"
    description: "Transform raw materials into refined materials at workshops"
    
  lookup_item_info:
    type: "builtin"
    description: "Look up item information and crafting recipes"
    
  analyze_crafting_chain:
    type: "builtin"
    description: "Recursively analyze complete crafting dependency chain from raw materials to final equipment"
    
  plan_crafting_materials:
    type: "builtin"
    description: "Plan material gathering for selected item to craft"
    
  execute_crafting_plan:
    type: "builtin"
    description: "Execute crafting plan including unequipping materials and crafting"
    
  equip_item:
    type: "builtin"
    description: "Equip an item from inventory"
    
  unequip_item:
    type: "builtin"
    description: "Unequip an item to inventory"
    
  explore_map:
    type: "builtin"
    description: "Explore the map to discover content"
    
  analyze_resources:
    type: "builtin"
    description: "Analyze nearby resources for crafting opportunities"
    
  analyze_equipment_gaps:
    type: "builtin"
    description: "Analyze all equipment slots and calculate upgrade priorities"
    
  select_optimal_slot:
    type: "builtin"
    description: "Select optimal equipment slot based on gaps and crafting skill"
    
  evaluate_recipes:
    type: "builtin"
    description: "Evaluate recipes for specified equipment slot and select the best craftable option"
    
  bootstrap_equipment_workflow:
    type: "composite"
    description: "Complete equipment bootstrap workflow for new characters"
    
  basic_weapon_upgrade:
    type: "composite"
    description: "Basic weapon upgrade workflow for level 2-3 characters"
    
  transform_raw_materials:
    type: "builtin" 
    description: "Transform raw materials into refined materials (smelting)"
    
  # Bridge actions for material transformation workflow
  analyze_materials_for_transformation:
    type: "builtin"
    description: "Analyze inventory to determine which materials to transform"
    
  determine_workshop_requirements:
    type: "builtin"
    description: "Determine which workshop is needed for each transformation"
    
  navigate_to_workshop:
    type: "builtin"
    description: "Navigate character to a specific workshop type"
    
  execute_material_transformation:
    type: "builtin"
    description: "Execute a single material transformation at current workshop"
    
  verify_transformation_results:
    type: "builtin"
    description: "Verify transformation results in inventory"
    
  # Equipment upgrade actions
  initiate_equipment_analysis:
    type: "builtin"
    description: "Initiate equipment analysis to prepare for upgrades"
    
  analyze_equipment_gaps:
    type: "builtin"
    description: "Analyze gaps in character equipment to identify upgrade needs"
    
  select_optimal_slot:
    type: "builtin"
    description: "Select the optimal equipment slot for crafting based on gaps and skill"
    
  select_recipe:
    type: "builtin"
    description: "Select the best recipe for crafting equipment in chosen slot"
    
  mark_equipment_crafting:
    type: "builtin"
    description: "Mark equipment status as crafting to track upgrade progress"
    
  complete_equipment_upgrade:
    type: "builtin"
    description: "Complete the equipment upgrade process after crafting"

  # Equipment progression action configurations
  find_workshops:
    type: "builtin"
    description: "Find and catalog crafting workshops using find_resources action"
          
  move_to_workshop:
    type: "builtin"
    description: "Move character to a known workshop location"
          
  move_to_resource:
    type: "builtin"
    description: "Move character to a known resource location"
    
  find_correct_workshop:
    type: "builtin"
    description: "Find and move to the correct workshop type for crafting a specific item"
    
  evaluate_weapon_recipes:
    type: "builtin"
    description: "Intelligently evaluate all weapon recipes and select the best craftable option"
    
  upgrade_weaponcrafting_skill:
    type: "builtin"
    description: "Level up weaponcrafting skill through strategic item crafting"
    
  check_skill_requirement:
    type: "builtin"
    description: "Check skill requirements for a task and set appropriate state variables"
    
  find_xp_sources:
    type: "builtin"
    description: "Find all sources that grant XP for a specific skill using effects analysis"
    
  gather_crafting_materials:
    type: "composite"
    description: "Gather materials needed for equipment crafting"

  # Custom/extensible actions using YAML configuration
  hunt:
    type: "composite"
    description: "Hunt monsters using intelligent search and attack"
    sequence:
      - action: "find_monsters"
        params:
          search_radius: 5
          use_intelligent_search: true
      - action: "attack"
        conditions:
          monster_found: true
        
  # Future extensible actions could be defined here
  # gather_resources:
  #   type: "yaml_defined"
  #   class_path: "src.controller.actions.gather.GatherResourcesAction"
  #   constructor_params:
  #     char_name: "character_name"
  #     resource_type: "resource_type"
  #     quantity: "quantity"
  #   preprocessors:
  #     resource_type: "src.lib.utils.normalize_resource_name"
  #   postprocessors:
  #     response: "src.lib.utils.format_gather_response"

# Default parameter mappings for common patterns
parameter_mappings:
  character_context:
    character_name: "character_state.name"
    character_x: "character_state.data.x"
    character_y: "character_state.data.y" 
    character_level: "character_state.data.level"
    character_hp: "character_state.data.hp"
    
  action_defaults:
    search_radius: 5
    level_range: 2
    use_intelligent_search: true
    
  # Action-specific parameter defaults
  craft_copper_defaults:
    item_code: "copper"
    quantity: 1
    
# Composite action definitions
composite_actions:
  hunt:
    description: "Complete hunting workflow"
    steps:
      - name: "find_target"
        action: "find_monsters"
        required: true
        params:
          search_radius: "${action_data.search_radius:5}"
          use_intelligent_search: true
          
      - name: "engage_target"  
        action: "attack"
        required: true
        conditions:
          monster_found: true
        on_failure: "abort"
        
      - name: "recover_if_needed"
        action: "rest"
        required: false
        conditions:
          hp_low: true
        params:
          force_rest: false

  find_and_move_to_monster:
    description: "Find level-appropriate monster and move to its location"
    steps:
      - name: "search_monsters"
        action: "find_monsters"
        required: true
        params:
          search_radius: "${action_data.search_radius:5}"
          level_range: "${action_data.level_range:2}"
          character_level: "${context.character_level}"
          character_x: "${context.character_x}"
          character_y: "${context.character_y}"
          
      - name: "move_to_monster"
        action: "move"
        required: true
        conditions:
          monster_found: true
        params:
          char_name: "${context.character_name}"
          use_target_coordinates: true
        on_failure: "abort"

  craft_weapon_chain:
    description: "Complete weapon crafting workflow with material smelting"
    steps:
      - name: "gather_additional_ore"
        action: "gather_resources"
        required: true
        params:
          character_name: "${context.character_name}"
          target_resource: "copper_ore"
        conditions:
          need_more_ore: true
          
      - name: "smelt_copper"
        action: "craft_item"
        required: true
        params:
          character_name: "${context.character_name}"
          item_code: "copper"
          quantity: 1
        conditions:
          has_enough_ore: true
          
      - name: "craft_weapon"
        action: "craft_item"  
        required: true
        params:
          character_name: "${context.character_name}"
          item_code: "${context.recipe_item_code}"
          quantity: 1
        conditions:
          has_copper: true
          
      - name: "equip_weapon"
        action: "equip_item"
        required: true
        params:
          character_name: "${context.character_name}" 
          item_code: "${context.recipe_item_code}"
          slot: "weapon"
        conditions:
          weapon_crafted: true

  intelligent_monster_search:
    description: "Search for monsters using learned knowledge with exploration fallback"
    steps:
      - name: "check_known_monsters"
        action: "find_monsters"
        required: false
        params:
          use_knowledge_base: true
          search_radius: "${action_data.search_radius:5}"
          character_level: "${context.character_level}"
          
      - name: "move_to_known_location"
        action: "move"
        required: false
        conditions:
          known_monster_found: true
        params:
          char_name: "${context.character_name}"
          use_target_coordinates: true
          
      - name: "fallback_exploration"
        action: "find_and_move_to_monster"
        required: true
        conditions:
          known_monster_found: false
        params:
          search_radius: "${action_data.search_radius:5}"
          
  # Equipment progression composite workflows
  upgrade_weapon_workflow:
    type: "composite"
    description: "Complete weapon upgrade workflow: analyze, gather, craft, equip"
    steps:
      - name: "analyze_equipment_needs"
        action: "analyze_resources"
        required: true
        params:
          search_radius: "${action_data.search_radius:5}"
          equipment_type: "weapon"
          character_level: "${context.character_level}"
          
      - name: "discover_workshops"
        action: "find_workshops"
        required: true
        conditions:
          workshops_needed: true
        params:
          search_radius: "${action_data.search_radius:5}"
          
      - name: "gather_materials"
        action: "gather_crafting_materials"
        required: true
        conditions:
          materials_needed: true
        params:
          target_item_type: "weapon"
          search_radius: "${action_data.search_radius:5}"
          
      - name: "move_to_workshop"
        action: "move_to_workshop"
        required: true
        conditions:
          materials_ready: true
        params:
          workshop_type: "weaponcrafting"
          
      - name: "craft_weapon"
        action: "craft_item"
        required: true
        conditions:
          at_workshop: true
        params:
          char_name: "${context.character_name}"
          item_code: "${action_data.target_weapon}"
          quantity: 1
          
      - name: "equip_weapon"
        action: "equip_item"
        required: true
        conditions:
          weapon_crafted: true
        params:
          char_name: "${context.character_name}"
          item_code: "${action_data.target_weapon}"
          slot: "weapon"
          
  upgrade_armor_workflow:
    type: "composite"
    description: "Complete armor upgrade workflow: analyze, gather, craft, equip"
    steps:
      - name: "analyze_equipment_needs"
        action: "analyze_resources"
        required: true
        params:
          search_radius: "${action_data.search_radius:5}"
          equipment_type: "armor"
          character_level: "${context.character_level}"
          
      - name: "discover_workshops"
        action: "find_workshops"
        required: true
        conditions:
          workshops_needed: true
        params:
          search_radius: "${action_data.search_radius:5}"
          
      - name: "gather_materials"
        action: "gather_crafting_materials"
        required: true
        conditions:
          materials_needed: true
        params:
          target_item_type: "armor"
          search_radius: "${action_data.search_radius:5}"
          
      - name: "move_to_workshop"
        action: "move_to_workshop"
        required: true
        conditions:
          materials_ready: true
        params:
          workshop_type: "gearcrafting"
          
      - name: "craft_armor"
        action: "craft_item"
        required: true
        conditions:
          at_workshop: true
        params:
          char_name: "${context.character_name}"
          item_code: "${action_data.target_armor}"
          quantity: 1
          
      - name: "equip_armor"
        action: "equip_item"
        required: true
        conditions:
          armor_crafted: true
        params:
          char_name: "${context.character_name}"
          item_code: "${action_data.target_armor}"
          slot: "${action_data.target_slot}"
          
  upgrade_weapon:
    type: "composite"
    description: "Complete weapon upgrade workflow: evaluate recipes, gather materials, craft, and equip"
    steps:
      - name: "check_inventory"
        action: "check_inventory"
        required: true
        params:
          character_name: "${context.character_name}"
          
      - name: "evaluate_weapon_recipes"
        action: "evaluate_weapon_recipes"
        required: true
        params:
          character_name: "${context.character_name}"
          current_weapon: "${context.weapon_slot}"
          character_level: "${context.character_level}"
          
      - name: "check_workshops"
        action: "find_correct_workshop"
        required: true
        conditions:
          selected_weapon: true
        params:
          workshop_type: "weaponcrafting"
          item_code: "${action_result.selected_weapon}"
          
      - name: "gather_materials"
        action: "gather_crafting_materials"
        required: true
        conditions:
          materials_needed: true
        params:
          target_item_type: "${action_result.selected_weapon}"
          required_materials: "${action_result.required_materials}"
          
      - name: "move_to_workshop"
        action: "move"
        required: true
        conditions:
          workshop_location_known: true
        params:
          use_target_coordinates: true
          
      - name: "craft_weapon"
        action: "craft_item"
        required: true
        conditions:
          at_workshop: true
        params:
          character_name: "${context.character_name}"
          item_code: "${action_result.selected_weapon}"
          
      - name: "equip_weapon"
        action: "equip_item"
        required: true
        conditions:
          weapon_crafted: true
        params:
          character_name: "${context.character_name}"
          item_code: "${action_result.selected_weapon}"
          slot: "weapon"

  gather_crafting_materials:
    type: "composite"
    description: "Gather materials needed for equipment crafting"
    steps:
      - name: "lookup_recipe"
        action: "lookup_item_info"
        required: true
        params:
          item_code: "${action_data.target_item_type}"
          
      - name: "find_material_sources"
        action: "find_resources"
        required: true
        conditions:
          recipe_known: true
        params:
          resource_types: "${action_data.required_materials}"
          search_radius: "${action_data.search_radius:5}"
          character_level: "${context.character_level}"
          
      - name: "move_to_resources"
        action: "move"
        required: true
        conditions:
          resource_found: true
        params:
          char_name: "${context.character_name}"
          use_target_coordinates: true
          
      - name: "gather_materials"
        action: "gather_resources"
        required: true
        conditions:
          at_resource_location: true
        params:
          character_name: "${context.character_name}"
          target_resource: "${action_data.material_type}"

  # Complete equipment progression workflow
  bootstrap_equipment_workflow:
    type: "composite"
    description: "Complete bootstrap workflow for new characters: discover → gather → craft → equip"
    steps:
      - name: "discover_workshops"
        action: "find_workshops"
        required: true
        params:
          search_radius: "${action_data.search_radius:5}"
          workshop_type: "any"
          
      - name: "analyze_equipment_needs"
        action: "analyze_resources"
        required: true
        conditions:
          workshops_discovered: true
        params:
          search_radius: "${action_data.search_radius:5}"
          equipment_focus: true
          character_level: "${context.character_level}"
          
      - name: "gather_weapon_materials"
        action: "gather_crafting_materials"
        required: true
        conditions:
          equipment_analysis_available: true
        params:
          target_item_type: "weapon"
          priority_materials: ["copper", "ash_wood"]
          search_radius: "${action_data.search_radius:5}"
          
      - name: "craft_weapon"
        action: "upgrade_weapon_workflow"
        required: true
        conditions:
          has_crafting_materials: true
        params:
          target_weapon_level: "${context.character_level}"
          
      - name: "gather_armor_materials"
        action: "gather_crafting_materials"
        required: false
        conditions:
          weapon_crafted: true
        params:
          target_item_type: "armor"
          priority_materials: ["copper", "ash_wood"]
          
      - name: "craft_armor"
        action: "upgrade_armor_workflow"
        required: false
        conditions:
          has_armor_materials: true
        params:
          target_armor_level: "${context.character_level}"
          
  # Simplified equipment upgrade workflows for individual pieces
  basic_weapon_upgrade:
    type: "composite"
    description: "Simplified weapon upgrade for level 2-3 characters"
    steps:
      - name: "find_workshops"
        action: "find_workshops"
        required: true
        params:
          workshop_type: "weaponcrafting"
          search_radius: 5
          
      - name: "gather_basic_materials"
        action: "find_resources"
        required: true
        conditions:
          workshops_discovered: true
        params:
          resource_types: ["copper", "ash_wood"]
          search_radius: 5
          
      - name: "collect_materials"
        action: "gather_resources"
        required: true
        conditions:
          resource_location_known: true
        params:
          char_name: "${context.character_name}"
          
      - name: "move_to_weaponcrafting"
        action: "move_to_workshop"
        required: true
        conditions:
          has_resources: true
        params:
          workshop_type: "weaponcrafting"
          
      - name: "craft_weapon"
        action: "craft_item"
        required: true
        conditions:
          at_workshop: true
        params:
          char_name: "${context.character_name}"
          item_code: "copper_dagger"  # Basic weapon for level 2

# Configuration for analyze_resources action priorities
# These priorities are used when evaluating equipment crafting opportunities
resource_analysis_priorities:
  equipment_type_priorities:
    weapon: 3           # Weapons have highest priority for damage output
    body_armor: 2       # Body armor for survivability
    helmet: 2           # Head protection
    leg_armor: 2        # Leg protection
    boots: 2            # Foot protection
    ring: 1             # Accessories have lower priority
    amulet: 1           # Accessories have lower priority
    utility: 1          # Utility items have lowest priority
    
  level_appropriateness_priorities:
    good: 3             # Level-appropriate equipment (within 1 level)
    acceptable: 2       # Slightly off level but usable (within 3 levels)
    poor: 1             # Too far from character level (more than 3 levels)

# Configuration for check_inventory action item categorization
# These are fallback patterns used when API/knowledge base data is not available
inventory_categorization_patterns:
  raw_materials:
    - "_ore"
    - "_rocks" 
    - "_tree"
    - "_wood"
    - "_spot"
  refined_materials:
    - "copper"
    - "iron"
    - "coal"
    - "gold"
    - "_plank"
  crafted_items:
    - "_dagger"
    - "_sword"
    - "_staff"
    - "_helmet"
    - "_armor"
  consumables:
    - "potion"
    - "food"
    - "raw_"
    - "cooked_"

# Configuration for evaluate_weapon_recipes action
# Stat weights for weapon evaluation - higher values mean more important stats
weapon_stat_weights:
  attack_fire: 2.0
  attack_earth: 2.0
  attack_water: 2.0
  attack_air: 2.0
  dmg: 3.0           # Base damage is most important
  dmg_fire: 2.0
  dmg_earth: 2.0
  dmg_water: 2.0
  dmg_air: 2.0
  critical_strike: 1.5
  hp: 1.0
  haste: 1.2
  wisdom: 0.8
  default: 1.0       # Default weight for unknown stats

# Basic weapons to check when evaluating skill blocks
# These are common early-game weapons that help determine progression paths
basic_weapon_codes:
  - "copper_dagger"
  - "wooden_staff"
  - "iron_dagger"
  - "bronze_sword"

# Configuration for evaluate_weapon_recipes action
evaluate_weapon_recipes:
  max_weapons_to_evaluate: 50      # With level filtering, this should be sufficient
  max_weapon_level_above_character: 1  # Only consider weapons up to 1 level above character
  max_weapon_level_below_character: 1  # Only consider weapons up to 1 level below character
  craftability_scoring:
    inventory_proximity_weight: 1000  # Very high weight for recipes we're close to completing
    stat_improvement_weight: 50
    stat_improvement_multiplier: 5
    level_appropriateness_weight: 25
    max_level_difference: 1
    skill_penalty_multiplier: 10

# Bridge action configurations
# These actions handle state transitions without API calls
action_configurations:
  # Combat Flow Bridge Actions
  reset_combat_context:
    type: "yaml_defined"
    class_path: "src.controller.actions.reset_combat_context.ResetCombatContextAction"
    description: "Reset combat context from completed to idle"
  
  abort_combat_search:
    type: "yaml_defined"
    class_path: "src.controller.actions.abort_combat_search.AbortCombatSearchAction"
    description: "Abort combat search when no monsters found"
  
  mark_combat_not_viable:
    type: "yaml_defined"
    class_path: "src.controller.actions.mark_combat_not_viable.MarkCombatNotViableAction"
    description: "Mark combat as not viable when win rate too low"
  
  recover_combat_viability:
    type: "yaml_defined"
    class_path: "src.controller.actions.recover_combat_viability.RecoverCombatViabilityAction"
    description: "Recover combat viability after equipment upgrade"
  
  # Equipment Flow Bridge Actions
  initiate_equipment_analysis:
    type: "yaml_defined"
    class_path: "src.controller.actions.initiate_equipment_analysis.InitiateEquipmentAnalysisAction"
    description: "Start equipment upgrade analysis process"
  
  mark_equipment_crafting:
    type: "yaml_defined"
    class_path: "src.controller.actions.mark_equipment_crafting.MarkEquipmentCraftingAction"
    description: "Mark equipment as being crafted"
  
  mark_equipment_ready:
    type: "yaml_defined"
    class_path: "src.controller.actions.mark_equipment_ready.MarkEquipmentReadyAction"
    description: "Mark equipment as ready for equipping"
  
  complete_equipment_upgrade:
    type: "yaml_defined"
    class_path: "src.controller.actions.complete_equipment_upgrade.CompleteEquipmentUpgradeAction"
    description: "Complete equipment upgrade process"
  
  reset_equipment_upgrade:
    type: "yaml_defined"
    class_path: "src.controller.actions.reset_equipment_upgrade.ResetEquipmentUpgradeAction"
    description: "Reset equipment upgrade for new cycle"
